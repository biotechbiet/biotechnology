"""
Django settings for BioTech project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '18f#ay6@%pqm9^szw7bli!@68^2u58*#y6kisq+31038+s-hd$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'bietdbt.herokuapp.com',
    '127.0.0.1'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'staff',
    'Students',
    'publication',
    'learning_resources',
    'product',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BioTech.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BioTech.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
import dj_database_url
db_from_env = dj_database_url.config(conn_max_age=600)
DATABASES['default'].update(db_from_env)
# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

X_FRAME_OPTIONS = 'SAMEORIGIN'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

if True:
    from storages.backends.s3boto3 import S3Boto3Storage

    StaticRootS3BotoStorage = lambda: S3Boto3Storage(location='static')
    MediaRootS3BotoStorage  = lambda: S3Boto3Storage(location='media')
    import datetime
    AWS_ACCESS_KEY_ID = "AKIA4YD3LKBZRTM3DVDJ"
    AWS_SECRET_ACCESS_KEY = "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"
    AWS_FILE_EXPIRE = 200
    AWS_PRELOAD_METADATA = True
    AWS_QUERYSTRING_AUTH = True
    AWS_DEFAULT_ACL=None
    DEFAULT_FILE_STORAGE = 'BioTech.aws.utils.MediaRootS3BotoStorage'
    STATICFILES_STORAGE = 'BioTech.aws.utils.StaticRootS3BotoStorage'
    AWS_STORAGE_BUCKET_NAME = 'bietbiotechbucket'
    # S3DIRECT_REGION = 'ap-south-1'
    AWS_S3_REGION_NAME='ap-south-1'
    AWS_S3_SIGNATURE_VERSION = "s3v4"
    S3_URL = '//%s.s3.amazonaws.com/' % AWS_STORAGE_BUCKET_NAME
    MEDIA_URL = '//%s.s3.amazonaws.com/media/' % AWS_STORAGE_BUCKET_NAME
    MEDIA_ROOT = MEDIA_URL
    STATIC_URL = S3_URL + 'static/'
    ADMIN_MEDIA_PREFIX = STATIC_URL + 'admin/'

    # two_months = datetime.timedelta(days=61)
    # date_two_months_later = datetime.date.today() + two_months
    # expires = date_two_months_later.strftime("%A, %d %B %Y 20:00:00 GMT")

    # AWS_HEADERS = { 
    #     'Expires': expires,
    #     'Cache-Control': 'max-age=%d' % (int(two_months.total_seconds()), ),
    # }
# else:
#     STATIC_URL = '/static/'
#     MEDIA_URL='/media/'
#     MEDIA_ROOT=os.path.join(BASE_DIR,'media')
#     STATIC_ROOT=BASE_DIR / 'static'

